// Search/replace string dates with date objects:
// (startDate|endDate): (".*")
// $1: new Date($2)

export const data = {
  success: true,
  tasks: {
    rows: [
      {
        iconCls: "ms-Icon ms-Icon--Nav2DMapView",
        id: "b1c28d9cedc26ce1d3ce85bdf6df81bbe65eb8030b7c740d8e46eaaa156d4e97cde9d7d1719d759e4aee4f825ca094d12585107471d5751bbf0ee1e8dc8d254dd4f2ff9b9d04016627e91d745d45bccc5587af72d85ae3e58e60b9a24d4f9f5d17f26c63a9ec99da3b4ed080f0878c2e876cf5fedc7b38438be999d3d7e4750ae5b0fddfab3c31f8e9bfeb81ab5a25f9089e7b47b0540708cfb6844504d61cfa56062c2d78c246c7b144a7f53ec7975dd1835c9fb59d65a2d10081655a218531050a2d79e76757eba6f55bcdb3160e10",
        parentIndex: 0,
        name: "Plan",
        constraintType: null,
        constraintDate: null,
        children: [
          {
            iconCls: "ms-Icon ms-Icon--Step",
            id: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f731946e1a57e200daa421b7e8b0fd2ff99f57f1f4eefb7fd638ee68ce157a19abdbb242bb351bc4fc5770a29a7892becca675101ce0493ae133fefff67eac939fb69aa5977749dfa628e0cb6d0387e99aec168f51b06eb0ccff4d7ff866186ffad7ec78e5b959e0a6898b1fb0865d92573a298d675a169c21c4d05350a24b4d4ef56459a1c2b65db5d1e19534483b0a73fd1a86975405f927ee402de0ea251d9c7dbc8e1d9cdb54c86fa92dcc0a395f1b6bddb07ddbce14dc8fcd12ee96728d4c705ce943e419adb367cf7f6c667dc176bc44f913364d4db0f11a5458278b8a2272fba7bb9825adca26a9569b6d037fdcebce89d6176c500cb6252bd8aa67fb7d32d477aec67bb08ee2638eb9a39847301ea5e1a742d6912ab5153a08ad44a5b645a91805d76a87258a4f89d079fc4b6d5b62609c6d845912d9e68abdd15da2ffc5e21ece7128ff9c7a95ae7369c232215c6cc64681bfe1e36fac303b6c5889f03d8073819262cfae387d842544f66fcd3fab1f608efc56fc6c220a71902539f4ba0f6c8b15d8dd929c8ed012694f4123ac57a51a534b40b7a2fe99c8e52606b12d167bd1282d4ffdb72c8285cb292ad2035d0d2aafcd2928c905e560333a7d733c64c06620e9af8e5398c738b7a6078015943afc2f1acefc83151642ecc1947530bffa4d5d59529ed69935283b90e3f0dba255deee05d91b58b289d460e406e7b6a6684ce314162917cd3173f84bc0c2b729bdd1c96cef8b5a0de3f69c4f424a1a4430129cd633371eee798850e167f31b0caf7b01159603d55f135867e7228809659bd777b80f08b512433e3611442eb0a9b018a917d9e09004359ceb54962d708e8e7913366a1aa69dd48f42b8096b6a659bab0c81414698a0c4f3d45162abccd4c59d6bf657626b995405a87890452e8ea4c4d679089611080aaf42ee20fd4b64dad92b342afa0edc6339027bd1266d4bdf02a090c7d763b3f431b5f029645b7a610d9ce52fe494838e8897316e2fadbf99d183e475bfdf6",
            parentIndex: 0,
            name: "Step 1",
            constraintType: null,
            constraintDate: null,
            children: [],
            expanded: true,
            manuallyScheduled: false,
            cls: "CoreFlowColor-1698248940",
            percentDone: 50,
            rollup: true,
            baselines: [],
            // startDate: "2024-05-31T22:00:00.000Z",
            // endDate: "2024-05-31T22:00:00.000Z",
            duration: 20,
            TaskParentId: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
            "Prop_d103a275-0738-11b1-407b-cca173c3b462": {
              name: null,
              value: "",
              isDirty: false,
              isValid: false,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Input",
                ClientId: null,
                Url: null,
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: true,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: "Skriv tekst her",
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "left",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "String",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_01e85925-bede-d6c8-09dd-f6b1a31707cd": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_StatusColor",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ab5a7544-55ea-4737-8110-01b13deaf053": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 130, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_Resources",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_418f70cb-6fc7-4644-be05-3868273b182c": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 70, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_f8663593-1ea6-4ce2-961a-2ad988180ff4": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_9c0dc21c-9a56-4004-af9b-6d5c8e8608e2": false,
            "Prop_5a1d5696-6136-4de8-80bf-1fdef98c76bf": {
              name: "",
              value: "I gang=IN_PROGRESS",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_TaskState",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ce48c569-df0a-4d57-bf01-1d1ecb568b64": {
              name: "Cast()",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 350, UnitType: "px", IsDefaultValue: true },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_TaskPriority",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_1c0e69b2-3a59-4968-871d-9b4504b9c944": false,
          },
          {
            iconCls: "ms-Icon ms-Icon--ReleaseGate",
            id: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f7319f2d7b3f48d63d57221e6de889c4111f9ab4b34ddaa2ba9372209163a794f8d8c5767476d6156d4461c28dbc0d176ad7ed423fabe41b5d78e55e29e04e4999a63f97773b3cfc22aa51269cc8f471905ef710952585ce64a2cf1deab21c582e8010a04a9dacc07887eb1e74f36a7104264ac3eff8f7d2ca25120191103f75616db8c1702695f0a4db1e3e8db9606d950a9e500d9a8f900a6e546f1b755f7751a1cf0e3735dd67fb2848d10ccfd329d615deea3d4982099e2386efc8f4b00d97af1198481834a83fc633517761b80b002723debe8db85ea44cd44a9989245a7804463de0dd65033ec19c25de2c67634b888ddcfa17db75d2716de1695c690491b2fa266f31705a9f2dc32e179349cc659e241e362c2568477d826a8ec57af7f8c83cef65a4835dc8c15dad40dc599b320fc0446d22634b23911cd01fb1aad01d986f3484a764b338d82a5b257dcb10d8d7e7db6e5aac881fd97ef7b442cbb1f8dcc08d71165687b66cd8bd49e7153dd067ce842f5d822d84103229025e67b2fa66a5ba617d8b7a022bb2a952277e7e3e0f8806e9782a52833567e477061aab566e78781123429498b709a66c188c55d8873a59c075f57e5dd3b8aea7b79b8c1060e0f6427d93e4ffd7d9e2e4f9400095d424b28e9e660dd949dca311d2a437a530c68604fc7d0d41181758dc5fd73bf71206a30e447aebfa9c7ce5663ee5f634bce32484bdc76a249d1ae83d8a87a7ed30165efda1009f961c0aa541025d138f257dd2ff4d4a25d2c85109e22369726ab15120d2441faf03c6681d5c1835cd82827bdadef3141e44ce24a7f70f00a4ff43f396485a8e410874d75c5fadae9b889396a7343cdafc3ffd3411a8098415b81fb388cefd325a1a4a6c7c793cbd1202e42b58e66524b557619013eb3bcbd2b5a121ca2bee3676f0818c705cd79fded12e98c980d7452977c7e318c1fda37b4af13374869a9b828a417803a3c1414e9715b4b5f5f455b6bf4d74971455299cc29a3ce44311ab5910c77",
            parentIndex: 1,
            name: "Gate 1",
            constraintType: null,
            constraintDate: null,
            children: [],
            expanded: false,
            manuallyScheduled: false,
            cls: "CoreFlowColor-1226944861",
            percentDone: 0,
            rollup: true,
            baselines: [],
            // startDate: "2024-05-31T22:00:00.000Z",
            // endDate: "2024-05-31T22:00:00.000Z",
            duration: 0,
            TaskParentId: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
            "Prop_d103a275-0738-11b1-407b-cca173c3b462": {
              name: null,
              value: "",
              isDirty: false,
              isValid: false,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Input",
                ClientId: null,
                Url: null,
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: true,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: "Skriv tekst her",
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "left",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "String",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_01e85925-bede-d6c8-09dd-f6b1a31707cd": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_StatusColor",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ab5a7544-55ea-4737-8110-01b13deaf053": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 130, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_Resources",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_418f70cb-6fc7-4644-be05-3868273b182c": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 70, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_f8663593-1ea6-4ce2-961a-2ad988180ff4": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_9c0dc21c-9a56-4004-af9b-6d5c8e8608e2": false,
            "Prop_5a1d5696-6136-4de8-80bf-1fdef98c76bf": {
              name: "",
              value: "Ikke startet=NOT_STARTED",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_TaskState",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ce48c569-df0a-4d57-bf01-1d1ecb568b64": {
              name: "Cast()",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 350, UnitType: "px", IsDefaultValue: true },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_TaskPriority",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_1c0e69b2-3a59-4968-871d-9b4504b9c944": false,
          },
          {
            iconCls: "ms-Icon ms-Icon--Step",
            id: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f7319b0d032debf6bc1d5e21b78310d2dbc154519001440d50c25c95d50c0234b15fa2a610e6baf21b24209ee89abdbf41c6a17b57b88b9624c27ba51f912653cc424b8a5ab7e566d5a85f8a7c2cb27ddfa3033820b5f3c24a94a1701f4a38db6ad38177924d97a9260d5783dbb1c5dda5268e295c1edc578353649a3c6553e83f3b869dc9127c700bbe2742540bb06b7f4be2b6885b307e2586cb78b3d12b730db14b4a95c407e0d15dd74621a69aac6bf30ff1238a1f5c55c450cc75acbe67851993bf8d4751ed3da07fca0461ced467262bc70800ed06f8f05bbcf3aa0958170fbea424b2a57261e20d750a51d76b165e412ba8e24ed5fc40125f18c6f4f6397a02e0735ed5788d75345ea9fbc51ef7dc316903bcc286aec10abe1b4fb7219f89d0ffd82a6485d71f7d0d46db7e9398374879a2305833a0880569d23a9c3f3076d222dda51688347307445e456d0b8bcccb3ce2ab7abd420a4bb29c0c733ec4c03f60a3516fd09e3e70e4edef3d8d267f4e8e21d1ec7730d2c2f961d399fedabe668363eefaedc4d91d2a8d6f37c42a7abb054eed45b0e34612a6f8f4b828f0615daf808193450705aa6648f3ea39b477f1be821558087da99b57f46d5d730a65fab6a80c2fd5eeefafcbf39490b1024d73e5912f0508c48580868df7113612a187c2cc85ae2fb0ac8ee5db7dfdf304bf07914443213a984eb8988ab4216fb8fe2abcdec4d4f53d7bdb97bdf0423f15620f433a75239205fa11704a4036473a9a7994a947e0e1512ae5e827a414911ffb70451c02acd5ce69c83b1d8f8bab7fe73c3a9198df49a428fb46aa88739b112be697a19db6405d4717696deaff110316513d985145684d2b25cd6b47ab6ba13dc15f4581a8292a1afeff6a140e099af6710676948f65cab81770e13c744c59193c08890d676011a04f817adb00e0b609a00e5f91625e79245bd9c0b8bfba7e199765152170fc32de79c44aa078fcef4bcf191d626cb85208c40082c6918686494b680dc89311c5562",
            parentIndex: 2,
            name: "Step 2",
            constraintType: null,
            constraintDate: null,
            children: [],
            expanded: true,
            manuallyScheduled: false,
            cls: "CoreFlowColor-1226698845",
            percentDone: 0,
            rollup: true,
            baselines: [],
            // startDate: "2024-05-31T22:00:00.000Z",
            // endDate: "2024-05-31T22:00:00.000Z",
            duration: 20,
            TaskParentId: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
            "Prop_d103a275-0738-11b1-407b-cca173c3b462": {
              name: null,
              value: "",
              isDirty: false,
              isValid: false,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Input",
                ClientId: null,
                Url: null,
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: true,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: "Skriv tekst her",
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "left",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "String",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_01e85925-bede-d6c8-09dd-f6b1a31707cd": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_StatusColor",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ab5a7544-55ea-4737-8110-01b13deaf053": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 130, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_Resources",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_418f70cb-6fc7-4644-be05-3868273b182c": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 70, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_f8663593-1ea6-4ce2-961a-2ad988180ff4": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_9c0dc21c-9a56-4004-af9b-6d5c8e8608e2": false,
            "Prop_5a1d5696-6136-4de8-80bf-1fdef98c76bf": {
              name: "",
              value: "Ikke startet=NOT_STARTED",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_TaskState",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ce48c569-df0a-4d57-bf01-1d1ecb568b64": {
              name: "Cast()",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 350, UnitType: "px", IsDefaultValue: true },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_TaskPriority",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_1c0e69b2-3a59-4968-871d-9b4504b9c944": false,
          },
          {
            iconCls: "ms-Icon ms-Icon--ReleaseGate",
            id: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f73196ea89dcc02d75478aa11680419476d42b8f84bc4bebea1b0b08250632de56763b9fe7983896428ee496baf7403e42302827237be1ad6fc5a6468d3c44c3adf0f4d6bc1f85ee2c81aba0b16ff6c9d51586c8b064e8b4f237db9bcae15e17ff2a00c50da1088ece006a8ff94dba8390c0956db7e7faa85e7b9cb1abcabbde02e9e5bc01a86a8e74f628d3480e1eab1da2aaa0640a92d0ed8f6d34ba411e5f302526b7348d835cd63f9540d5f1d2c240f5ef5e4c7d00721f8fcaf9b637daaa209c0388ef92453263a84789ef7675f176c4b6e5f0bed04330c8d0885c32b0b6f911fd798f1edeb8c09df1342d9d57f782b5895556f5a01c2dc17d45c876b432aaec56e4aeba2d9bb4aace2656250a67956e1316de1ccfab9c3143fd2f13a63683478b522bc5d0d4ac84bd26285f83f9caa5a6ee8dd6f53b1d2bb5075bd37a6897e62aed3e704d1ca0c37408ec64ddc41e326bcd7dfd5f3a9e881dd4d0ea615d7400f6954a549acd6d9dc9dacfced4bd1288bdc8fd25bcc70068ce0b7c922854ae6464efb20769f2b99a366e18f3166b82d175ed003f7524f0947ff80b64113d1b2c9eb4268f35ac8f7123ab10452e74591ee13781e0107df8b594107f678904ffb117aab0b1c6e3ae004fe123ba084bfa7619685f7283de0c2d04f1bde1abe1e3f2f43f9f330a00ad62487accc1847d64dc3489e8beace8d61baaa428c5272a6e3c50944f5821b2f8a55320f23d2626a36eb2d9ed98da1370a9311fb58644b9ac2eb25c5f4dc4eeb0b18ed58b24dd3cdec2f6e55f40193febfb8ddc7ef88ed9bbe4a34d8060f2dbfacbf33370badce9f53c2fc4f72cc41913f0e16bd07cb6766c8536339d60310736a0690487db34264e471cdfd5b010a58e44925e890f578d09f25f79ee543273e5590a7b804ebf088e5f6f0bdf143e30ad2d5fcbdaee4f8a9633f048899b30efac7227ffdeedd01d788186cfc5162ba7541de8a4e2cb2f4b53fd701da7c2f212884523c2e2d2ad64a9a4c8e155a957023978b",
            parentIndex: 3,
            name: "Gate 2",
            constraintType: null,
            constraintDate: null,
            children: [],
            expanded: false,
            manuallyScheduled: false,
            cls: "CoreFlowColor-1669215597",
            percentDone: 0,
            rollup: true,
            baselines: [],
            // startDate: "2024-05-31T22:00:00.000Z",
            // endDate: "2024-05-31T22:00:00.000Z",
            duration: 0,
            TaskParentId: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
            "Prop_d103a275-0738-11b1-407b-cca173c3b462": {
              name: null,
              value: "",
              isDirty: false,
              isValid: false,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Input",
                ClientId: null,
                Url: null,
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: true,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: "Skriv tekst her",
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "left",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "String",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_01e85925-bede-d6c8-09dd-f6b1a31707cd": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_StatusColor",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ab5a7544-55ea-4737-8110-01b13deaf053": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 130, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_Resources",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_418f70cb-6fc7-4644-be05-3868273b182c": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 70, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_f8663593-1ea6-4ce2-961a-2ad988180ff4": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_9c0dc21c-9a56-4004-af9b-6d5c8e8608e2": false,
            "Prop_5a1d5696-6136-4de8-80bf-1fdef98c76bf": {
              name: "",
              value: "Ikke startet=NOT_STARTED",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_TaskState",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ce48c569-df0a-4d57-bf01-1d1ecb568b64": {
              name: "Cast()",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 350, UnitType: "px", IsDefaultValue: true },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_TaskPriority",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_1c0e69b2-3a59-4968-871d-9b4504b9c944": false,
          },
          {
            iconCls: "ms-Icon ms-Icon--Step",
            id: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f7319e5c0d7bc7926a1140b205630d2c9b05542888a4c86716af7fa9d07088f4c091cb12db8c8626691b06c237b59d6fccf83b82a782c0e3635cf407d351c265c9bf8a27d9ecc3c59292afe807c2eafc314e9bc6f134a8ce54e2d7a8963370fafb2737521ed7319c4a944f599074b588417bc01a2f4328015dddffaf499712a995a1a05e78004ce5c3f316f3194abd5ce27fc8bb104568bf3d9ad8fc0289bf5609e8f1d92b4549812ebeeafa8c67ec365a28516f6804b40cdcd0c94c9aed5d49aacd756140a241bf681aec006cf3d2d84f3f6ad19442d96bd90701b863801b858431dd96834f3030814049610f4732f5c9d82324eda15a7f7a308df62aff9e39f2c9ed45004877135abeb9d3255e9c0adb10de91fb8470875b290b2e8d69f3598031bf308112a529bebab2ba35755dc8385dfe4fd639567a7ac236ac6aecf4c0e6bfb8ff6526515c25e6b2e7bfe6f10758bdd3f7e81aa3a3fd9b71a0066449f106206fa848f2b21f8b6a316eb22d668d5df213a0976ccd9d1ab65af9abd5d8196defd485ea6a42dbaf3147dac861cc1679445c6d4a7350bfce1a319412ec592bb996a452ded3484cf01d28fbcfefcedb5676a9f3c646493afed8d89d142bf92facf040ac6b18064fdb44882cff1c8cd05207963bd697e0320dc51aab84d1cd4356f3af7153689ec84807a6aaa00a26f92d5714226996c14992471f668949ffdabac8960983a9e59f680c2eb6720c961287f3a5330b7565a14d4891c205da5e632863ba9446b827b790466678c8bc8d968c8fe88eef3d2e071f7e4bbd05f05bb5f9347caf054f44e5826163e0334edd250ed60ae9bfb9bebf71c544c4afec41dd4527e1ac9ab292eaf8e92324ced0175611ce13b0b11b334f48230ed325656e3d2ef8406104d2f80d50fcaf2898642315a608f9893d41b19803f8a48cc01517323e5dc5a2860c6e3a1697a0947e23e31a6194406495cf2ef2e9195475355d9c102c68a565968cd8fe5b675f032fb867e02712485d8453fa7e70214",
            parentIndex: 4,
            name: "Step 3",
            constraintType: null,
            constraintDate: null,
            children: [],
            expanded: true,
            manuallyScheduled: false,
            cls: "CoreFlowColor-1876815602",
            percentDone: 0,
            rollup: true,
            baselines: [],
            // startDate: "2024-05-31T22:00:00.000Z",
            // endDate: "2024-05-31T22:00:00.000Z",
            duration: 20,
            TaskParentId: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
            "Prop_d103a275-0738-11b1-407b-cca173c3b462": {
              name: null,
              value: "",
              isDirty: false,
              isValid: false,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Input",
                ClientId: null,
                Url: null,
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: true,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: "Skriv tekst her",
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "left",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "String",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_01e85925-bede-d6c8-09dd-f6b1a31707cd": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_StatusColor",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ab5a7544-55ea-4737-8110-01b13deaf053": {
              name: "",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 130, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_Resources",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_418f70cb-6fc7-4644-be05-3868273b182c": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 70, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_f8663593-1ea6-4ce2-961a-2ad988180ff4": {
              name: null,
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "Number",
                ClientId: null,
                Url: null,
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: null,
                DropDownMaxHeight: null,
                MultiSelectionMode: false,
                SetValidationExpression: {
                  Expression:
                    "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
                  OnError:
                    "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
                },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: false,
                TreeViewEnabled: false,
                SetInputValue: null,
                Value: "",
                Placeholder: null,
                OnRequest: null,
                OnResponse: null,
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: "right",
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Decimal",
                  cf_object_subtype: null,
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 1,
                Thousands: true,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 0,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_9c0dc21c-9a56-4004-af9b-6d5c8e8608e2": false,
            "Prop_5a1d5696-6136-4de8-80bf-1fdef98c76bf": {
              name: "",
              value: "Ikke startet=NOT_STARTED",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "Enum",
                  cf_object_subtype: "PFX_TaskState",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_ce48c569-df0a-4d57-bf01-1d1ecb568b64": {
              name: "Cast()",
              value: "",
              isDirty: false,
              isValid: true,
              options: {
                AvoidClientDisplayValue: false,
                CallGetDisplayValueOnChange: false,
                Context: {
                  ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
                  Lcid: 1030,
                  TagContext: null,
                },
                LabelEnum: null,
                VisibleEnumKeys: null,
                FitType: "DropDown",
                ClientId: null,
                Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
                Width: { Value: 350, UnitType: "px", IsDefaultValue: true },
                DropDownMaxWidth: {
                  Value: 400,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                DropDownMaxHeight: {
                  Value: 250,
                  UnitType: "px",
                  IsDefaultValue: true,
                },
                MultiSelectionMode: false,
                SetValidationExpression: { Expression: null, OnError: "" },
                SetValidationCallback: { Callback: null, OnError: "" },
                Required: false,
                Scope: null,
                InputEnabled: true,
                TreeViewEnabled: true,
                SetInputValue: null,
                Value: "",
                Placeholder: "",
                OnRequest:
                  "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
                OnResponse:
                  "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
                OnPopulated: null,
                OnPaste: null,
                OnChange: null,
                OnFocus: null,
                OnBlur: null,
                OnOpen: null,
                OnClose: null,
                AutoPostBack: false,
                AutoSelectAll: false,
                Height: null,
                MultiLine: false,
                Maximizable: false,
                HtmlEditOptions: null,
                TextAlign: null,
                Lines: false,
                WordWrap: false,
                ShowSelectAll: false,
                Selectable: false,
                SanitationEnabled: true,
                OneSelectionPerBranch: false,
                JsonpCallback: null,
                ContextMenu: null,
                Time: false,
                WeekNumbers: false,
                Locale: null,
                Format: null,
                AlwaysBoth: false,
                LabelTrue: null,
                LabelFalse: null,
                ForcedDirty: false,
                DisableReordering: false,
                DataAttributes: {
                  cf_object_name: null,
                  cf_object_type: "SelectEnum",
                  cf_object_subtype: "PFX_TaskPriority",
                  cf_object_multiple: "false",
                  cf_lcid: "1030",
                },
                HistoryHtml: null,
                HistoryData: null,
                HideCalendarIcon: false,
                UpdateOnEnter: false,
                Upload: false,
                UploadTargetPicker: null,
                UploadForcedDestination: null,
                UploadListNames: null,
                UploadExtensions: null,
                UploadSelectFirstTargetNode: false,
                AutoResolveDisplayValue: false,
                Decimals: 0,
                Thousands: false,
                Percent: false,
                DecimalAdjustment: null,
                CalendarDate: null,
                DecimalAsInteger: false,
                MaxItemsInVisualMode: 25,
                HideSelectionModeToggle: false,
                DisableAutoLoadOnFocus: false,
                DisableSelectAll: false,
                PublishOnChange: false,
                OnFocusCommands: null,
                OnBlurCommands: null,
                OnDoubleClickCommands: null,
                OnChangeCommands: null,
                MultiValueControl: false,
                MultiValueControlDistinctValues: false,
                ControlTypeVariant: 0,
                Enabled: true,
                Description: null,
              },
            },
            "Prop_1c0e69b2-3a59-4968-871d-9b4504b9c944": false,
          },
        ],
        expanded: true,
        manuallyScheduled: true,
        percentDone: 0,
        rollup: true,
        baselines: [],
        startDate: "2024-06-01T06:00:00.000Z",
        endDate: "2024-12-01T15:00:00.000Z",
        TaskParentId: "",
        "Prop_d103a275-0738-11b1-407b-cca173c3b462": {
          name: null,
          value: "",
          isDirty: false,
          isValid: false,
          options: {
            AvoidClientDisplayValue: false,
            CallGetDisplayValueOnChange: false,
            Context: {
              ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
              Lcid: 1030,
              TagContext: null,
            },
            LabelEnum: null,
            VisibleEnumKeys: null,
            FitType: "Input",
            ClientId: null,
            Url: null,
            Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
            DropDownMaxWidth: null,
            DropDownMaxHeight: null,
            MultiSelectionMode: false,
            SetValidationExpression: { Expression: null, OnError: "" },
            SetValidationCallback: { Callback: null, OnError: "" },
            Required: true,
            Scope: null,
            InputEnabled: false,
            TreeViewEnabled: false,
            SetInputValue: null,
            Value: "",
            Placeholder: "Skriv tekst her",
            OnRequest: null,
            OnResponse: null,
            OnPopulated: null,
            OnPaste: null,
            OnChange: null,
            OnFocus: null,
            OnBlur: null,
            OnOpen: null,
            OnClose: null,
            AutoPostBack: false,
            AutoSelectAll: false,
            Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
            MultiLine: false,
            Maximizable: false,
            HtmlEditOptions: null,
            TextAlign: "left",
            Lines: false,
            WordWrap: false,
            ShowSelectAll: false,
            Selectable: false,
            SanitationEnabled: true,
            OneSelectionPerBranch: false,
            JsonpCallback: null,
            ContextMenu: null,
            Time: false,
            WeekNumbers: false,
            Locale: null,
            Format: null,
            AlwaysBoth: false,
            LabelTrue: null,
            LabelFalse: null,
            ForcedDirty: false,
            DisableReordering: false,
            DataAttributes: {
              cf_object_name: null,
              cf_object_type: "String",
              cf_object_subtype: null,
              cf_object_multiple: "false",
              cf_lcid: "1030",
            },
            HistoryHtml: null,
            HistoryData: null,
            HideCalendarIcon: false,
            UpdateOnEnter: false,
            Upload: false,
            UploadTargetPicker: null,
            UploadForcedDestination: null,
            UploadListNames: null,
            UploadExtensions: null,
            UploadSelectFirstTargetNode: false,
            AutoResolveDisplayValue: false,
            Decimals: 0,
            Thousands: false,
            Percent: false,
            DecimalAdjustment: null,
            CalendarDate: null,
            DecimalAsInteger: false,
            MaxItemsInVisualMode: 0,
            HideSelectionModeToggle: false,
            DisableAutoLoadOnFocus: false,
            DisableSelectAll: false,
            PublishOnChange: false,
            OnFocusCommands: null,
            OnBlurCommands: null,
            OnDoubleClickCommands: null,
            OnChangeCommands: null,
            MultiValueControl: false,
            MultiValueControlDistinctValues: false,
            ControlTypeVariant: 0,
            Enabled: true,
            Description: null,
          },
        },
        "Prop_01e85925-bede-d6c8-09dd-f6b1a31707cd": {
          name: "",
          value: "",
          isDirty: false,
          isValid: true,
          options: {
            AvoidClientDisplayValue: false,
            CallGetDisplayValueOnChange: false,
            Context: {
              ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
              Lcid: 1030,
              TagContext: null,
            },
            LabelEnum: null,
            VisibleEnumKeys: null,
            FitType: "DropDown",
            ClientId: null,
            Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
            Width: { Value: 175, UnitType: "px", IsDefaultValue: false },
            DropDownMaxWidth: {
              Value: 400,
              UnitType: "px",
              IsDefaultValue: true,
            },
            DropDownMaxHeight: {
              Value: 250,
              UnitType: "px",
              IsDefaultValue: true,
            },
            MultiSelectionMode: false,
            SetValidationExpression: { Expression: null, OnError: "" },
            SetValidationCallback: { Callback: null, OnError: "" },
            Required: false,
            Scope: null,
            InputEnabled: true,
            TreeViewEnabled: true,
            SetInputValue: null,
            Value: "",
            Placeholder: "",
            OnRequest:
              "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
            OnResponse:
              "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
            OnPopulated: null,
            OnPaste: null,
            OnChange: null,
            OnFocus: null,
            OnBlur: null,
            OnOpen: null,
            OnClose: null,
            AutoPostBack: false,
            AutoSelectAll: false,
            Height: null,
            MultiLine: false,
            Maximizable: false,
            HtmlEditOptions: null,
            TextAlign: null,
            Lines: false,
            WordWrap: false,
            ShowSelectAll: false,
            Selectable: false,
            SanitationEnabled: true,
            OneSelectionPerBranch: false,
            JsonpCallback: null,
            ContextMenu: null,
            Time: false,
            WeekNumbers: false,
            Locale: null,
            Format: null,
            AlwaysBoth: false,
            LabelTrue: null,
            LabelFalse: null,
            ForcedDirty: false,
            DisableReordering: false,
            DataAttributes: {
              cf_object_name: null,
              cf_object_type: "Enum",
              cf_object_subtype: "PFX_StatusColor",
              cf_object_multiple: "false",
              cf_lcid: "1030",
            },
            HistoryHtml: null,
            HistoryData: null,
            HideCalendarIcon: false,
            UpdateOnEnter: false,
            Upload: false,
            UploadTargetPicker: null,
            UploadForcedDestination: null,
            UploadListNames: null,
            UploadExtensions: null,
            UploadSelectFirstTargetNode: false,
            AutoResolveDisplayValue: false,
            Decimals: 0,
            Thousands: false,
            Percent: false,
            DecimalAdjustment: null,
            CalendarDate: null,
            DecimalAsInteger: false,
            MaxItemsInVisualMode: 25,
            HideSelectionModeToggle: false,
            DisableAutoLoadOnFocus: false,
            DisableSelectAll: false,
            PublishOnChange: false,
            OnFocusCommands: null,
            OnBlurCommands: null,
            OnDoubleClickCommands: null,
            OnChangeCommands: null,
            MultiValueControl: false,
            MultiValueControlDistinctValues: false,
            ControlTypeVariant: 0,
            Enabled: true,
            Description: null,
          },
        },
        "Prop_ab5a7544-55ea-4737-8110-01b13deaf053": {
          name: "",
          value: "",
          isDirty: false,
          isValid: true,
          options: {
            AvoidClientDisplayValue: false,
            CallGetDisplayValueOnChange: false,
            Context: {
              ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
              Lcid: 1030,
              TagContext: null,
            },
            LabelEnum: null,
            VisibleEnumKeys: null,
            FitType: "DropDown",
            ClientId: null,
            Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
            Width: { Value: 130, UnitType: "px", IsDefaultValue: false },
            DropDownMaxWidth: {
              Value: 400,
              UnitType: "px",
              IsDefaultValue: true,
            },
            DropDownMaxHeight: {
              Value: 250,
              UnitType: "px",
              IsDefaultValue: true,
            },
            MultiSelectionMode: false,
            SetValidationExpression: { Expression: null, OnError: "" },
            SetValidationCallback: { Callback: null, OnError: "" },
            Required: false,
            Scope: null,
            InputEnabled: true,
            TreeViewEnabled: true,
            SetInputValue: null,
            Value: "",
            Placeholder: "",
            OnRequest:
              "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
            OnResponse:
              "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
            OnPopulated: null,
            OnPaste: null,
            OnChange: null,
            OnFocus: null,
            OnBlur: null,
            OnOpen: null,
            OnClose: null,
            AutoPostBack: false,
            AutoSelectAll: false,
            Height: null,
            MultiLine: false,
            Maximizable: false,
            HtmlEditOptions: null,
            TextAlign: null,
            Lines: false,
            WordWrap: false,
            ShowSelectAll: false,
            Selectable: false,
            SanitationEnabled: true,
            OneSelectionPerBranch: false,
            JsonpCallback: null,
            ContextMenu: null,
            Time: false,
            WeekNumbers: false,
            Locale: null,
            Format: null,
            AlwaysBoth: false,
            LabelTrue: null,
            LabelFalse: null,
            ForcedDirty: false,
            DisableReordering: false,
            DataAttributes: {
              cf_object_name: null,
              cf_object_type: "SelectEnum",
              cf_object_subtype: "PFX_Resources",
              cf_object_multiple: "false",
              cf_lcid: "1030",
            },
            HistoryHtml: null,
            HistoryData: null,
            HideCalendarIcon: false,
            UpdateOnEnter: false,
            Upload: false,
            UploadTargetPicker: null,
            UploadForcedDestination: null,
            UploadListNames: null,
            UploadExtensions: null,
            UploadSelectFirstTargetNode: false,
            AutoResolveDisplayValue: false,
            Decimals: 0,
            Thousands: false,
            Percent: false,
            DecimalAdjustment: null,
            CalendarDate: null,
            DecimalAsInteger: false,
            MaxItemsInVisualMode: 25,
            HideSelectionModeToggle: false,
            DisableAutoLoadOnFocus: false,
            DisableSelectAll: false,
            PublishOnChange: false,
            OnFocusCommands: null,
            OnBlurCommands: null,
            OnDoubleClickCommands: null,
            OnChangeCommands: null,
            MultiValueControl: false,
            MultiValueControlDistinctValues: false,
            ControlTypeVariant: 0,
            Enabled: true,
            Description: null,
          },
        },
        "Prop_418f70cb-6fc7-4644-be05-3868273b182c": {
          name: null,
          value: "",
          isDirty: false,
          isValid: true,
          options: {
            AvoidClientDisplayValue: false,
            CallGetDisplayValueOnChange: false,
            Context: {
              ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
              Lcid: 1030,
              TagContext: null,
            },
            LabelEnum: null,
            VisibleEnumKeys: null,
            FitType: "Number",
            ClientId: null,
            Url: null,
            Width: { Value: 70, UnitType: "px", IsDefaultValue: false },
            DropDownMaxWidth: null,
            DropDownMaxHeight: null,
            MultiSelectionMode: false,
            SetValidationExpression: {
              Expression:
                "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
              OnError:
                "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
            },
            SetValidationCallback: { Callback: null, OnError: "" },
            Required: false,
            Scope: null,
            InputEnabled: false,
            TreeViewEnabled: false,
            SetInputValue: null,
            Value: "",
            Placeholder: null,
            OnRequest: null,
            OnResponse: null,
            OnPopulated: null,
            OnPaste: null,
            OnChange: null,
            OnFocus: null,
            OnBlur: null,
            OnOpen: null,
            OnClose: null,
            AutoPostBack: false,
            AutoSelectAll: false,
            Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
            MultiLine: false,
            Maximizable: false,
            HtmlEditOptions: null,
            TextAlign: "right",
            Lines: false,
            WordWrap: false,
            ShowSelectAll: false,
            Selectable: false,
            SanitationEnabled: true,
            OneSelectionPerBranch: false,
            JsonpCallback: null,
            ContextMenu: null,
            Time: false,
            WeekNumbers: false,
            Locale: null,
            Format: null,
            AlwaysBoth: false,
            LabelTrue: null,
            LabelFalse: null,
            ForcedDirty: false,
            DisableReordering: false,
            DataAttributes: {
              cf_object_name: null,
              cf_object_type: "Decimal",
              cf_object_subtype: null,
              cf_object_multiple: "false",
              cf_lcid: "1030",
            },
            HistoryHtml: null,
            HistoryData: null,
            HideCalendarIcon: false,
            UpdateOnEnter: false,
            Upload: false,
            UploadTargetPicker: null,
            UploadForcedDestination: null,
            UploadListNames: null,
            UploadExtensions: null,
            UploadSelectFirstTargetNode: false,
            AutoResolveDisplayValue: false,
            Decimals: 1,
            Thousands: true,
            Percent: false,
            DecimalAdjustment: null,
            CalendarDate: null,
            DecimalAsInteger: false,
            MaxItemsInVisualMode: 0,
            HideSelectionModeToggle: false,
            DisableAutoLoadOnFocus: false,
            DisableSelectAll: false,
            PublishOnChange: false,
            OnFocusCommands: null,
            OnBlurCommands: null,
            OnDoubleClickCommands: null,
            OnChangeCommands: null,
            MultiValueControl: false,
            MultiValueControlDistinctValues: false,
            ControlTypeVariant: 0,
            Enabled: true,
            Description: null,
          },
        },
        "Prop_f8663593-1ea6-4ce2-961a-2ad988180ff4": {
          name: null,
          value: "",
          isDirty: false,
          isValid: true,
          options: {
            AvoidClientDisplayValue: false,
            CallGetDisplayValueOnChange: false,
            Context: {
              ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
              Lcid: 1030,
              TagContext: null,
            },
            LabelEnum: null,
            VisibleEnumKeys: null,
            FitType: "Number",
            ClientId: null,
            Url: null,
            Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
            DropDownMaxWidth: null,
            DropDownMaxHeight: null,
            MultiSelectionMode: false,
            SetValidationExpression: {
              Expression:
                "/(?!^-$)^-?(([0-9]{0,12})|([0-9]{1,3}([.]{1}[0-9]{3}){1,4}))([,][0-9]{1,99})?$/",
              OnError:
                "Denne værdi er ikke et gyldigt decimaltal - eksempel: 500.000,00",
            },
            SetValidationCallback: { Callback: null, OnError: "" },
            Required: false,
            Scope: null,
            InputEnabled: false,
            TreeViewEnabled: false,
            SetInputValue: null,
            Value: "",
            Placeholder: null,
            OnRequest: null,
            OnResponse: null,
            OnPopulated: null,
            OnPaste: null,
            OnChange: null,
            OnFocus: null,
            OnBlur: null,
            OnOpen: null,
            OnClose: null,
            AutoPostBack: false,
            AutoSelectAll: false,
            Height: { Value: -1, UnitType: "px", IsDefaultValue: true },
            MultiLine: false,
            Maximizable: false,
            HtmlEditOptions: null,
            TextAlign: "right",
            Lines: false,
            WordWrap: false,
            ShowSelectAll: false,
            Selectable: false,
            SanitationEnabled: true,
            OneSelectionPerBranch: false,
            JsonpCallback: null,
            ContextMenu: null,
            Time: false,
            WeekNumbers: false,
            Locale: null,
            Format: null,
            AlwaysBoth: false,
            LabelTrue: null,
            LabelFalse: null,
            ForcedDirty: false,
            DisableReordering: false,
            DataAttributes: {
              cf_object_name: null,
              cf_object_type: "Decimal",
              cf_object_subtype: null,
              cf_object_multiple: "false",
              cf_lcid: "1030",
            },
            HistoryHtml: null,
            HistoryData: null,
            HideCalendarIcon: false,
            UpdateOnEnter: false,
            Upload: false,
            UploadTargetPicker: null,
            UploadForcedDestination: null,
            UploadListNames: null,
            UploadExtensions: null,
            UploadSelectFirstTargetNode: false,
            AutoResolveDisplayValue: false,
            Decimals: 1,
            Thousands: true,
            Percent: false,
            DecimalAdjustment: null,
            CalendarDate: null,
            DecimalAsInteger: false,
            MaxItemsInVisualMode: 0,
            HideSelectionModeToggle: false,
            DisableAutoLoadOnFocus: false,
            DisableSelectAll: false,
            PublishOnChange: false,
            OnFocusCommands: null,
            OnBlurCommands: null,
            OnDoubleClickCommands: null,
            OnChangeCommands: null,
            MultiValueControl: false,
            MultiValueControlDistinctValues: false,
            ControlTypeVariant: 0,
            Enabled: true,
            Description: null,
          },
        },
        "Prop_9c0dc21c-9a56-4004-af9b-6d5c8e8608e2": false,
        "Prop_5a1d5696-6136-4de8-80bf-1fdef98c76bf": {
          name: "",
          value: "",
          isDirty: false,
          isValid: true,
          options: {
            AvoidClientDisplayValue: false,
            CallGetDisplayValueOnChange: false,
            Context: {
              ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
              Lcid: 1030,
              TagContext: null,
            },
            LabelEnum: null,
            VisibleEnumKeys: null,
            FitType: "DropDown",
            ClientId: null,
            Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
            Width: { Value: 90, UnitType: "px", IsDefaultValue: false },
            DropDownMaxWidth: {
              Value: 400,
              UnitType: "px",
              IsDefaultValue: true,
            },
            DropDownMaxHeight: {
              Value: 250,
              UnitType: "px",
              IsDefaultValue: true,
            },
            MultiSelectionMode: false,
            SetValidationExpression: { Expression: null, OnError: "" },
            SetValidationCallback: { Callback: null, OnError: "" },
            Required: false,
            Scope: null,
            InputEnabled: true,
            TreeViewEnabled: true,
            SetInputValue: null,
            Value: "",
            Placeholder: "",
            OnRequest:
              "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
            OnResponse:
              "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
            OnPopulated: null,
            OnPaste: null,
            OnChange: null,
            OnFocus: null,
            OnBlur: null,
            OnOpen: null,
            OnClose: null,
            AutoPostBack: false,
            AutoSelectAll: false,
            Height: null,
            MultiLine: false,
            Maximizable: false,
            HtmlEditOptions: null,
            TextAlign: null,
            Lines: false,
            WordWrap: false,
            ShowSelectAll: false,
            Selectable: false,
            SanitationEnabled: true,
            OneSelectionPerBranch: false,
            JsonpCallback: null,
            ContextMenu: null,
            Time: false,
            WeekNumbers: false,
            Locale: null,
            Format: null,
            AlwaysBoth: false,
            LabelTrue: null,
            LabelFalse: null,
            ForcedDirty: false,
            DisableReordering: false,
            DataAttributes: {
              cf_object_name: null,
              cf_object_type: "Enum",
              cf_object_subtype: "PFX_TaskState",
              cf_object_multiple: "false",
              cf_lcid: "1030",
            },
            HistoryHtml: null,
            HistoryData: null,
            HideCalendarIcon: false,
            UpdateOnEnter: false,
            Upload: false,
            UploadTargetPicker: null,
            UploadForcedDestination: null,
            UploadListNames: null,
            UploadExtensions: null,
            UploadSelectFirstTargetNode: false,
            AutoResolveDisplayValue: false,
            Decimals: 0,
            Thousands: false,
            Percent: false,
            DecimalAdjustment: null,
            CalendarDate: null,
            DecimalAsInteger: false,
            MaxItemsInVisualMode: 25,
            HideSelectionModeToggle: false,
            DisableAutoLoadOnFocus: false,
            DisableSelectAll: false,
            PublishOnChange: false,
            OnFocusCommands: null,
            OnBlurCommands: null,
            OnDoubleClickCommands: null,
            OnChangeCommands: null,
            MultiValueControl: false,
            MultiValueControlDistinctValues: false,
            ControlTypeVariant: 0,
            Enabled: true,
            Description: null,
          },
        },
        "Prop_ce48c569-df0a-4d57-bf01-1d1ecb568b64": {
          name: "Cast()",
          value: "",
          isDirty: false,
          isValid: true,
          options: {
            AvoidClientDisplayValue: false,
            CallGetDisplayValueOnChange: false,
            Context: {
              ContextWeb: "f51740b6-fccf-402f-9f45-72435e3dd4c0",
              Lcid: 1030,
              TagContext: null,
            },
            LabelEnum: null,
            VisibleEnumKeys: null,
            FitType: "DropDown",
            ClientId: null,
            Url: "https://jit-coreflow.projectflow.dev/_layouts/15/FlowIT/WebService/coreflowfxapi.svc/SearchControlData",
            Width: { Value: 350, UnitType: "px", IsDefaultValue: true },
            DropDownMaxWidth: {
              Value: 400,
              UnitType: "px",
              IsDefaultValue: true,
            },
            DropDownMaxHeight: {
              Value: 250,
              UnitType: "px",
              IsDefaultValue: true,
            },
            MultiSelectionMode: false,
            SetValidationExpression: { Expression: null, OnError: "" },
            SetValidationCallback: { Callback: null, OnError: "" },
            Required: false,
            Scope: null,
            InputEnabled: true,
            TreeViewEnabled: true,
            SetInputValue: null,
            Value: "",
            Placeholder: "",
            OnRequest:
              "\\r\\n                            function(sender, eventArgs) // Sender is DropDown - Use eventArgs.Picker to get picker that triggered request\\r\\n                            {\\r\\n                                if (!sender.FlowITCacheGuid)\\r\\n                                    sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n\\r\\n                                var context = eventArgs.Request.GetData().context;\\r\\n\\r\\n                                if (Fit.Core.InstanceOf(eventArgs.Picker, Fit.Controls.WSListView) === true)\\r\\n                                {\\r\\n                                    context.Search = FlowITEncode64UTF8(eventArgs.Search);\\r\\n                                }\\r\\n                                else /*WSTreeView*/\\r\\n                                {\\r\\n                                    if(eventArgs.Node === null)\\r\\n                                    {\\r\\n                                        context.ParentNode = null; /* In case DropDown data is being reloaded, in which case we need the root nodes */\\r\\n                                        // Discard cached data by updating Cache ID (_CF_SESSION_ID) when picker is reloaded\\r\\n                                        // (eventArgs.Node is Null). DocumentPicker reloads TreeView when a new document i uploaded.\\r\\n                                        sender.FlowITCacheGuid = FlowITEncode64UTF8(Fit.Data.CreateGuid());\\r\\n                                    }\\r\\n                                    else\\r\\n                                    {\\r\\n                                        context.ParentNode = FlowITEncode64UTF8(eventArgs.Node.Supplementary['FullValue']);\\r\\n                                        eventArgs.Request.GetData().context.SelectAll = FlowITEncode64UTF8(eventArgs.SelectAll === true ? 'true' : 'false');\\r\\n                                    }\\r\\n\\r\\n                                    context.Search = null; /* Do not use previously entered search value if control data is reloaded to get the most recent data available */\\r\\n                                }\\r\\n\\r\\n                                context['_CF_SESSION_ID'] = sender.FlowITCacheGuid;\\r\\n\\r\\n                                // Pass Selected IDs to server when requesting nodes\\r\\n                                var selectedIds = '';\\r\\n                                Fit.Array.ForEach(sender.GetSelections(), function(sel)\\r\\n                                {\\r\\n                                    selectedIds += ((selectedIds !== '') ? ',' : '') + sel.Value;\\r\\n                                });\\r\\n                                if (selectedIds !== '')\\r\\n                                    context['_CF_SELECTEDIDS'] = FlowITEncode64UTF8(selectedIds);\\r\\n\\r\\n                                if (window.FitUiAdditionalDebugging)\\r\\n                                {\\r\\n                                    setTimeout(function() { CreateSearchControlDataUnitTest(eventArgs.Request.GetData()); }, 0); // setTimeout to allow all OnRequest handlers to run, and potentially modify request data\\r\\n                                }\\r\\n                            }",
            OnResponse:
              "function(sender, eventArgs) { Fit.Array.Recurse(eventArgs.Data, 'Children', function(item) { if (item.Title !== null && item.Title !== undefined && Fit.String.Trim(Fit.String.StripHtml(item.Title)) === '') { item.Title = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; } }); }",
            OnPopulated: null,
            OnPaste: null,
            OnChange: null,
            OnFocus: null,
            OnBlur: null,
            OnOpen: null,
            OnClose: null,
            AutoPostBack: false,
            AutoSelectAll: false,
            Height: null,
            MultiLine: false,
            Maximizable: false,
            HtmlEditOptions: null,
            TextAlign: null,
            Lines: false,
            WordWrap: false,
            ShowSelectAll: false,
            Selectable: false,
            SanitationEnabled: true,
            OneSelectionPerBranch: false,
            JsonpCallback: null,
            ContextMenu: null,
            Time: false,
            WeekNumbers: false,
            Locale: null,
            Format: null,
            AlwaysBoth: false,
            LabelTrue: null,
            LabelFalse: null,
            ForcedDirty: false,
            DisableReordering: false,
            DataAttributes: {
              cf_object_name: null,
              cf_object_type: "SelectEnum",
              cf_object_subtype: "PFX_TaskPriority",
              cf_object_multiple: "false",
              cf_lcid: "1030",
            },
            HistoryHtml: null,
            HistoryData: null,
            HideCalendarIcon: false,
            UpdateOnEnter: false,
            Upload: false,
            UploadTargetPicker: null,
            UploadForcedDestination: null,
            UploadListNames: null,
            UploadExtensions: null,
            UploadSelectFirstTargetNode: false,
            AutoResolveDisplayValue: false,
            Decimals: 0,
            Thousands: false,
            Percent: false,
            DecimalAdjustment: null,
            CalendarDate: null,
            DecimalAsInteger: false,
            MaxItemsInVisualMode: 25,
            HideSelectionModeToggle: false,
            DisableAutoLoadOnFocus: false,
            DisableSelectAll: false,
            PublishOnChange: false,
            OnFocusCommands: null,
            OnBlurCommands: null,
            OnDoubleClickCommands: null,
            OnChangeCommands: null,
            MultiValueControl: false,
            MultiValueControlDistinctValues: false,
            ControlTypeVariant: 0,
            Enabled: true,
            Description: null,
          },
        },
        "Prop_1c0e69b2-3a59-4968-871d-9b4504b9c944": false,
      },
    ],
  },
  dependencies: {
    rows: [
      {
        id: "425b86dd-6441-2dd4-38b5-2fe74c693ddf",
        from: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f731946e1a57e200daa421b7e8b0fd2ff99f57f1f4eefb7fd638ee68ce157a19abdbb242bb351bc4fc5770a29a7892becca675101ce0493ae133fefff67eac939fb69aa5977749dfa628e0cb6d0387e99aec168f51b06eb0ccff4d7ff866186ffad7ec78e5b959e0a6898b1fb0865d92573a298d675a169c21c4d05350a24b4d4ef56459a1c2b65db5d1e19534483b0a73fd1a86975405f927ee402de0ea251d9c7dbc8e1d9cdb54c86fa92dcc0a395f1b6bddb07ddbce14dc8fcd12ee96728d4c705ce943e419adb367cf7f6c667dc176bc44f913364d4db0f11a5458278b8a2272fba7bb9825adca26a9569b6d037fdcebce89d6176c500cb6252bd8aa67fb7d32d477aec67bb08ee2638eb9a39847301ea5e1a742d6912ab5153a08ad44a5b645a91805d76a87258a4f89d079fc4b6d5b62609c6d845912d9e68abdd15da2ffc5e21ece7128ff9c7a95ae7369c232215c6cc64681bfe1e36fac303b6c5889f03d8073819262cfae387d842544f66fcd3fab1f608efc56fc6c220a71902539f4ba0f6c8b15d8dd929c8ed012694f4123ac57a51a534b40b7a2fe99c8e52606b12d167bd1282d4ffdb72c8285cb292ad2035d0d2aafcd2928c905e560333a7d733c64c06620e9af8e5398c738b7a6078015943afc2f1acefc83151642ecc1947530bffa4d5d59529ed69935283b90e3f0dba255deee05d91b58b289d460e406e7b6a6684ce314162917cd3173f84bc0c2b729bdd1c96cef8b5a0de3f69c4f424a1a4430129cd633371eee798850e167f31b0caf7b01159603d55f135867e7228809659bd777b80f08b512433e3611442eb0a9b018a917d9e09004359ceb54962d708e8e7913366a1aa69dd48f42b8096b6a659bab0c81414698a0c4f3d45162abccd4c59d6bf657626b995405a87890452e8ea4c4d679089611080aaf42ee20fd4b64dad92b342afa0edc6339027bd1266d4bdf02a090c7d763b3f431b5f029645b7a610d9ce52fe494838e8897316e2fadbf99d183e475bfdf6",
        to: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f7319f2d7b3f48d63d57221e6de889c4111f9ab4b34ddaa2ba9372209163a794f8d8c5767476d6156d4461c28dbc0d176ad7ed423fabe41b5d78e55e29e04e4999a63f97773b3cfc22aa51269cc8f471905ef710952585ce64a2cf1deab21c582e8010a04a9dacc07887eb1e74f36a7104264ac3eff8f7d2ca25120191103f75616db8c1702695f0a4db1e3e8db9606d950a9e500d9a8f900a6e546f1b755f7751a1cf0e3735dd67fb2848d10ccfd329d615deea3d4982099e2386efc8f4b00d97af1198481834a83fc633517761b80b002723debe8db85ea44cd44a9989245a7804463de0dd65033ec19c25de2c67634b888ddcfa17db75d2716de1695c690491b2fa266f31705a9f2dc32e179349cc659e241e362c2568477d826a8ec57af7f8c83cef65a4835dc8c15dad40dc599b320fc0446d22634b23911cd01fb1aad01d986f3484a764b338d82a5b257dcb10d8d7e7db6e5aac881fd97ef7b442cbb1f8dcc08d71165687b66cd8bd49e7153dd067ce842f5d822d84103229025e67b2fa66a5ba617d8b7a022bb2a952277e7e3e0f8806e9782a52833567e477061aab566e78781123429498b709a66c188c55d8873a59c075f57e5dd3b8aea7b79b8c1060e0f6427d93e4ffd7d9e2e4f9400095d424b28e9e660dd949dca311d2a437a530c68604fc7d0d41181758dc5fd73bf71206a30e447aebfa9c7ce5663ee5f634bce32484bdc76a249d1ae83d8a87a7ed30165efda1009f961c0aa541025d138f257dd2ff4d4a25d2c85109e22369726ab15120d2441faf03c6681d5c1835cd82827bdadef3141e44ce24a7f70f00a4ff43f396485a8e410874d75c5fadae9b889396a7343cdafc3ffd3411a8098415b81fb388cefd325a1a4a6c7c793cbd1202e42b58e66524b557619013eb3bcbd2b5a121ca2bee3676f0818c705cd79fded12e98c980d7452977c7e318c1fda37b4af13374869a9b828a417803a3c1414e9715b4b5f5f455b6bf4d74971455299cc29a3ce44311ab5910c77",
        type: 2,
        lag: 0,
        readOnly: false,
        __note:
          "Denne afhængighed mellem 'Step 1' og 'Gate 1' vedligeholdes automatisk ud fra fasemodellen. Du kan justere på dens opsætning efter behov.",
        __originalFrom:
          "f51740b6-fccf-402f-9f45-72435e3dd4c0:GenericProcess:978bbf47-9ad3-4b05-b783-4394a803f829:AnyStepV1",
        __originalTo:
          "f51740b6-fccf-402f-9f45-72435e3dd4c0:GenericProcess:37dd93c8-d230-4f76-a14d-f7844c1e7478:AnyStepV1",
      },
      {
        id: "c7016231-ea34-724b-034c-18d411808169",
        from: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f7319f2d7b3f48d63d57221e6de889c4111f9ab4b34ddaa2ba9372209163a794f8d8c5767476d6156d4461c28dbc0d176ad7ed423fabe41b5d78e55e29e04e4999a63f97773b3cfc22aa51269cc8f471905ef710952585ce64a2cf1deab21c582e8010a04a9dacc07887eb1e74f36a7104264ac3eff8f7d2ca25120191103f75616db8c1702695f0a4db1e3e8db9606d950a9e500d9a8f900a6e546f1b755f7751a1cf0e3735dd67fb2848d10ccfd329d615deea3d4982099e2386efc8f4b00d97af1198481834a83fc633517761b80b002723debe8db85ea44cd44a9989245a7804463de0dd65033ec19c25de2c67634b888ddcfa17db75d2716de1695c690491b2fa266f31705a9f2dc32e179349cc659e241e362c2568477d826a8ec57af7f8c83cef65a4835dc8c15dad40dc599b320fc0446d22634b23911cd01fb1aad01d986f3484a764b338d82a5b257dcb10d8d7e7db6e5aac881fd97ef7b442cbb1f8dcc08d71165687b66cd8bd49e7153dd067ce842f5d822d84103229025e67b2fa66a5ba617d8b7a022bb2a952277e7e3e0f8806e9782a52833567e477061aab566e78781123429498b709a66c188c55d8873a59c075f57e5dd3b8aea7b79b8c1060e0f6427d93e4ffd7d9e2e4f9400095d424b28e9e660dd949dca311d2a437a530c68604fc7d0d41181758dc5fd73bf71206a30e447aebfa9c7ce5663ee5f634bce32484bdc76a249d1ae83d8a87a7ed30165efda1009f961c0aa541025d138f257dd2ff4d4a25d2c85109e22369726ab15120d2441faf03c6681d5c1835cd82827bdadef3141e44ce24a7f70f00a4ff43f396485a8e410874d75c5fadae9b889396a7343cdafc3ffd3411a8098415b81fb388cefd325a1a4a6c7c793cbd1202e42b58e66524b557619013eb3bcbd2b5a121ca2bee3676f0818c705cd79fded12e98c980d7452977c7e318c1fda37b4af13374869a9b828a417803a3c1414e9715b4b5f5f455b6bf4d74971455299cc29a3ce44311ab5910c77",
        to: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f7319b0d032debf6bc1d5e21b78310d2dbc154519001440d50c25c95d50c0234b15fa2a610e6baf21b24209ee89abdbf41c6a17b57b88b9624c27ba51f912653cc424b8a5ab7e566d5a85f8a7c2cb27ddfa3033820b5f3c24a94a1701f4a38db6ad38177924d97a9260d5783dbb1c5dda5268e295c1edc578353649a3c6553e83f3b869dc9127c700bbe2742540bb06b7f4be2b6885b307e2586cb78b3d12b730db14b4a95c407e0d15dd74621a69aac6bf30ff1238a1f5c55c450cc75acbe67851993bf8d4751ed3da07fca0461ced467262bc70800ed06f8f05bbcf3aa0958170fbea424b2a57261e20d750a51d76b165e412ba8e24ed5fc40125f18c6f4f6397a02e0735ed5788d75345ea9fbc51ef7dc316903bcc286aec10abe1b4fb7219f89d0ffd82a6485d71f7d0d46db7e9398374879a2305833a0880569d23a9c3f3076d222dda51688347307445e456d0b8bcccb3ce2ab7abd420a4bb29c0c733ec4c03f60a3516fd09e3e70e4edef3d8d267f4e8e21d1ec7730d2c2f961d399fedabe668363eefaedc4d91d2a8d6f37c42a7abb054eed45b0e34612a6f8f4b828f0615daf808193450705aa6648f3ea39b477f1be821558087da99b57f46d5d730a65fab6a80c2fd5eeefafcbf39490b1024d73e5912f0508c48580868df7113612a187c2cc85ae2fb0ac8ee5db7dfdf304bf07914443213a984eb8988ab4216fb8fe2abcdec4d4f53d7bdb97bdf0423f15620f433a75239205fa11704a4036473a9a7994a947e0e1512ae5e827a414911ffb70451c02acd5ce69c83b1d8f8bab7fe73c3a9198df49a428fb46aa88739b112be697a19db6405d4717696deaff110316513d985145684d2b25cd6b47ab6ba13dc15f4581a8292a1afeff6a140e099af6710676948f65cab81770e13c744c59193c08890d676011a04f817adb00e0b609a00e5f91625e79245bd9c0b8bfba7e199765152170fc32de79c44aa078fcef4bcf191d626cb85208c40082c6918686494b680dc89311c5562",
        type: 2,
        lag: 0,
        readOnly: false,
        __note:
          "Denne afhængighed mellem 'Gate 1' og 'Step 2' vedligeholdes automatisk ud fra fasemodellen. Du kan justere på dens opsætning efter behov.",
        __originalFrom:
          "f51740b6-fccf-402f-9f45-72435e3dd4c0:GenericProcess:37dd93c8-d230-4f76-a14d-f7844c1e7478:AnyStepV1",
        __originalTo:
          "f51740b6-fccf-402f-9f45-72435e3dd4c0:GenericProcess:343d0d9b-0874-44a1-8f4f-07f73a5c5be8:AnyStepV1",
      },
      {
        id: "132f40a4-0612-8186-3c18-f17bd53792a0",
        from: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f7319b0d032debf6bc1d5e21b78310d2dbc154519001440d50c25c95d50c0234b15fa2a610e6baf21b24209ee89abdbf41c6a17b57b88b9624c27ba51f912653cc424b8a5ab7e566d5a85f8a7c2cb27ddfa3033820b5f3c24a94a1701f4a38db6ad38177924d97a9260d5783dbb1c5dda5268e295c1edc578353649a3c6553e83f3b869dc9127c700bbe2742540bb06b7f4be2b6885b307e2586cb78b3d12b730db14b4a95c407e0d15dd74621a69aac6bf30ff1238a1f5c55c450cc75acbe67851993bf8d4751ed3da07fca0461ced467262bc70800ed06f8f05bbcf3aa0958170fbea424b2a57261e20d750a51d76b165e412ba8e24ed5fc40125f18c6f4f6397a02e0735ed5788d75345ea9fbc51ef7dc316903bcc286aec10abe1b4fb7219f89d0ffd82a6485d71f7d0d46db7e9398374879a2305833a0880569d23a9c3f3076d222dda51688347307445e456d0b8bcccb3ce2ab7abd420a4bb29c0c733ec4c03f60a3516fd09e3e70e4edef3d8d267f4e8e21d1ec7730d2c2f961d399fedabe668363eefaedc4d91d2a8d6f37c42a7abb054eed45b0e34612a6f8f4b828f0615daf808193450705aa6648f3ea39b477f1be821558087da99b57f46d5d730a65fab6a80c2fd5eeefafcbf39490b1024d73e5912f0508c48580868df7113612a187c2cc85ae2fb0ac8ee5db7dfdf304bf07914443213a984eb8988ab4216fb8fe2abcdec4d4f53d7bdb97bdf0423f15620f433a75239205fa11704a4036473a9a7994a947e0e1512ae5e827a414911ffb70451c02acd5ce69c83b1d8f8bab7fe73c3a9198df49a428fb46aa88739b112be697a19db6405d4717696deaff110316513d985145684d2b25cd6b47ab6ba13dc15f4581a8292a1afeff6a140e099af6710676948f65cab81770e13c744c59193c08890d676011a04f817adb00e0b609a00e5f91625e79245bd9c0b8bfba7e199765152170fc32de79c44aa078fcef4bcf191d626cb85208c40082c6918686494b680dc89311c5562",
        to: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f73196ea89dcc02d75478aa11680419476d42b8f84bc4bebea1b0b08250632de56763b9fe7983896428ee496baf7403e42302827237be1ad6fc5a6468d3c44c3adf0f4d6bc1f85ee2c81aba0b16ff6c9d51586c8b064e8b4f237db9bcae15e17ff2a00c50da1088ece006a8ff94dba8390c0956db7e7faa85e7b9cb1abcabbde02e9e5bc01a86a8e74f628d3480e1eab1da2aaa0640a92d0ed8f6d34ba411e5f302526b7348d835cd63f9540d5f1d2c240f5ef5e4c7d00721f8fcaf9b637daaa209c0388ef92453263a84789ef7675f176c4b6e5f0bed04330c8d0885c32b0b6f911fd798f1edeb8c09df1342d9d57f782b5895556f5a01c2dc17d45c876b432aaec56e4aeba2d9bb4aace2656250a67956e1316de1ccfab9c3143fd2f13a63683478b522bc5d0d4ac84bd26285f83f9caa5a6ee8dd6f53b1d2bb5075bd37a6897e62aed3e704d1ca0c37408ec64ddc41e326bcd7dfd5f3a9e881dd4d0ea615d7400f6954a549acd6d9dc9dacfced4bd1288bdc8fd25bcc70068ce0b7c922854ae6464efb20769f2b99a366e18f3166b82d175ed003f7524f0947ff80b64113d1b2c9eb4268f35ac8f7123ab10452e74591ee13781e0107df8b594107f678904ffb117aab0b1c6e3ae004fe123ba084bfa7619685f7283de0c2d04f1bde1abe1e3f2f43f9f330a00ad62487accc1847d64dc3489e8beace8d61baaa428c5272a6e3c50944f5821b2f8a55320f23d2626a36eb2d9ed98da1370a9311fb58644b9ac2eb25c5f4dc4eeb0b18ed58b24dd3cdec2f6e55f40193febfb8ddc7ef88ed9bbe4a34d8060f2dbfacbf33370badce9f53c2fc4f72cc41913f0e16bd07cb6766c8536339d60310736a0690487db34264e471cdfd5b010a58e44925e890f578d09f25f79ee543273e5590a7b804ebf088e5f6f0bdf143e30ad2d5fcbdaee4f8a9633f048899b30efac7227ffdeedd01d788186cfc5162ba7541de8a4e2cb2f4b53fd701da7c2f212884523c2e2d2ad64a9a4c8e155a957023978b",
        type: 2,
        lag: 0,
        readOnly: false,
        __note:
          "Denne afhængighed mellem 'Step 2' og 'Gate 2' vedligeholdes automatisk ud fra fasemodellen. Du kan justere på dens opsætning efter behov.",
        __originalFrom:
          "f51740b6-fccf-402f-9f45-72435e3dd4c0:GenericProcess:343d0d9b-0874-44a1-8f4f-07f73a5c5be8:AnyStepV1",
        __originalTo:
          "f51740b6-fccf-402f-9f45-72435e3dd4c0:GenericProcess:90d45417-7efa-4a8c-84de-a0c8471cb7c0:AnyStepV1",
      },
      {
        id: "0da38d86-c1fd-57ee-59a3-a0b7d1dcd076",
        from: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f73196ea89dcc02d75478aa11680419476d42b8f84bc4bebea1b0b08250632de56763b9fe7983896428ee496baf7403e42302827237be1ad6fc5a6468d3c44c3adf0f4d6bc1f85ee2c81aba0b16ff6c9d51586c8b064e8b4f237db9bcae15e17ff2a00c50da1088ece006a8ff94dba8390c0956db7e7faa85e7b9cb1abcabbde02e9e5bc01a86a8e74f628d3480e1eab1da2aaa0640a92d0ed8f6d34ba411e5f302526b7348d835cd63f9540d5f1d2c240f5ef5e4c7d00721f8fcaf9b637daaa209c0388ef92453263a84789ef7675f176c4b6e5f0bed04330c8d0885c32b0b6f911fd798f1edeb8c09df1342d9d57f782b5895556f5a01c2dc17d45c876b432aaec56e4aeba2d9bb4aace2656250a67956e1316de1ccfab9c3143fd2f13a63683478b522bc5d0d4ac84bd26285f83f9caa5a6ee8dd6f53b1d2bb5075bd37a6897e62aed3e704d1ca0c37408ec64ddc41e326bcd7dfd5f3a9e881dd4d0ea615d7400f6954a549acd6d9dc9dacfced4bd1288bdc8fd25bcc70068ce0b7c922854ae6464efb20769f2b99a366e18f3166b82d175ed003f7524f0947ff80b64113d1b2c9eb4268f35ac8f7123ab10452e74591ee13781e0107df8b594107f678904ffb117aab0b1c6e3ae004fe123ba084bfa7619685f7283de0c2d04f1bde1abe1e3f2f43f9f330a00ad62487accc1847d64dc3489e8beace8d61baaa428c5272a6e3c50944f5821b2f8a55320f23d2626a36eb2d9ed98da1370a9311fb58644b9ac2eb25c5f4dc4eeb0b18ed58b24dd3cdec2f6e55f40193febfb8ddc7ef88ed9bbe4a34d8060f2dbfacbf33370badce9f53c2fc4f72cc41913f0e16bd07cb6766c8536339d60310736a0690487db34264e471cdfd5b010a58e44925e890f578d09f25f79ee543273e5590a7b804ebf088e5f6f0bdf143e30ad2d5fcbdaee4f8a9633f048899b30efac7227ffdeedd01d788186cfc5162ba7541de8a4e2cb2f4b53fd701da7c2f212884523c2e2d2ad64a9a4c8e155a957023978b",
        to: "19cc745644ee0df7a7f233560b2b8e4239220f732336309edc76c6d6286b89b7296326509abc04bb8f0a6357e742155d2860b0f044d4864f198dfe75214f1c254bfbf8d674e872011e88ac2537cb3a12effefd3e0944d20ccdff215dc2805774c21928912d3f7319e5c0d7bc7926a1140b205630d2c9b05542888a4c86716af7fa9d07088f4c091cb12db8c8626691b06c237b59d6fccf83b82a782c0e3635cf407d351c265c9bf8a27d9ecc3c59292afe807c2eafc314e9bc6f134a8ce54e2d7a8963370fafb2737521ed7319c4a944f599074b588417bc01a2f4328015dddffaf499712a995a1a05e78004ce5c3f316f3194abd5ce27fc8bb104568bf3d9ad8fc0289bf5609e8f1d92b4549812ebeeafa8c67ec365a28516f6804b40cdcd0c94c9aed5d49aacd756140a241bf681aec006cf3d2d84f3f6ad19442d96bd90701b863801b858431dd96834f3030814049610f4732f5c9d82324eda15a7f7a308df62aff9e39f2c9ed45004877135abeb9d3255e9c0adb10de91fb8470875b290b2e8d69f3598031bf308112a529bebab2ba35755dc8385dfe4fd639567a7ac236ac6aecf4c0e6bfb8ff6526515c25e6b2e7bfe6f10758bdd3f7e81aa3a3fd9b71a0066449f106206fa848f2b21f8b6a316eb22d668d5df213a0976ccd9d1ab65af9abd5d8196defd485ea6a42dbaf3147dac861cc1679445c6d4a7350bfce1a319412ec592bb996a452ded3484cf01d28fbcfefcedb5676a9f3c646493afed8d89d142bf92facf040ac6b18064fdb44882cff1c8cd05207963bd697e0320dc51aab84d1cd4356f3af7153689ec84807a6aaa00a26f92d5714226996c14992471f668949ffdabac8960983a9e59f680c2eb6720c961287f3a5330b7565a14d4891c205da5e632863ba9446b827b790466678c8bc8d968c8fe88eef3d2e071f7e4bbd05f05bb5f9347caf054f44e5826163e0334edd250ed60ae9bfb9bebf71c544c4afec41dd4527e1ac9ab292eaf8e92324ced0175611ce13b0b11b334f48230ed325656e3d2ef8406104d2f80d50fcaf2898642315a608f9893d41b19803f8a48cc01517323e5dc5a2860c6e3a1697a0947e23e31a6194406495cf2ef2e9195475355d9c102c68a565968cd8fe5b675f032fb867e02712485d8453fa7e70214",
        type: 2,
        lag: 0,
        readOnly: false,
        __note:
          "Denne afhængighed mellem 'Gate 2' og 'Step 3' vedligeholdes automatisk ud fra fasemodellen. Du kan justere på dens opsætning efter behov.",
        __originalFrom:
          "f51740b6-fccf-402f-9f45-72435e3dd4c0:GenericProcess:90d45417-7efa-4a8c-84de-a0c8471cb7c0:AnyStepV1",
        __originalTo:
          "f51740b6-fccf-402f-9f45-72435e3dd4c0:GenericProcess:e4b75888-af1c-4de3-85ec-51a74f6ff9ce:AnyStepV1",
      },
    ],
  },
};
